version: 2.1
orbs:
  # Your orb will be automatically injected here during the pipeline.
  # Reference your orb's jobs and commands below as they will exist when built.
  orb-tools: circleci/orb-tools@12.0
  # The orb definition is intentionally not included here. It will be injected into the pipeline.
  container-tagger-orb: {}

# Use this tag to ensure test jobs always run,
# even though the downstream publish job will only run on release tags.
filters: &filters
  tags:
    only: /.*/

# Filter for release tags.
release-filters: &release-filters
  branches:
    ignore: /.*/
  tags:
    only: /^v[0-9]+\.[0-9]+\.[0-9]+$/

jobs:
  # Create jobs to test the commands of your orbs.
  # You may want to add additional validation steps to ensure the commands are working as expected.
  command-test:
    docker:
      - image: cimg/base:current
    steps:
      - checkout
      - container-tagger-orb/generate_tags
      - setup_remote_docker:
          docker_layer_caching: true
      - container-tagger-orb/tag:
          source_image: gcr.io/distroless/static:latest
          target_image: mydistroless
      - run:
          name: Verify Target Tags Exist
          command: |
            while read -r INTAG; do
              docker image ls mydistroless:$INTAG | grep -v REPOSITORY
            done < tags.txt
      - container-tagger-orb/populate_tag_env
      - run:
          name: Verify Environment Variables
          command: |
            if [[ -z $TAG ]]; then
              echo "Expected TAG to be set, but it was not."
              exit 1
            fi
            echo "The TAG environment variable was set: ${TAG}"
      - container-tagger-orb/populate_image_uri_env:
          image: gcr.io/distroless/static
      - run:
          name: Verify Environment Variables
          command: |
            if [[ -z $IMAGE_URI ]]; then
              echo "Expected IMAGE_URI to be set, but it was not."
              exit 1
            fi
            echo "The IMAGE_URI environment variable was set: ${IMAGE_URI}"
      - run:
          name: Setup Digest Test
          command: |
            echo "export TAG=latest" >> ${BASH_ENV}
            echo "export IMAGE_URI=gcr.io/distroless/static:latest" >> ${BASH_ENV}
      - container-tagger-orb/populate_image_uri_digest_env
      - run:
          name: Verify Environment Variables
          command: |
            if [[ -z $IMAGE_URI_DIGEST ]]; then
              echo "Expected IMAGE_URI_DIGEST to be set, but it was not."
              exit 1
            fi
            echo "The IMAGE_URI_DIGEST environment variable was set: ${IMAGE_URI_DIGEST}"
workflows:
  test-deploy:
    jobs:
      # Make sure to include "filters: *filters" in every test job you want to run as part of your deployment.
      # Test your orb's commands in a custom job and test your orb's jobs directly as a part of this workflow.
      - command-test:
          filters: *filters
      # The orb must be re-packed for publishing, and saved to the workspace.
      - orb-tools/pack:
          filters: *release-filters
      - orb-tools/publish:
          orb_name: juburr/container-tagger-orb
          vcs_type: << pipeline.project.type >>
          pub_type: production
          # Ensure this job requires all test jobs and the pack job.
          requires:
            - orb-tools/pack
            - command-test
          context: orb-publishing
          filters: *release-filters
